using System.Collections;
using System.Collections.Generic;
using UnityEngine;

// Класс - головний контейнер скрипта
public class Shpargalka : MonoBehaviour 
{
    // Ціле число "int" зі значенням 12.
    // private - модифікатор доступу до змінної age,
    // забороняє відобаження змінної в редакторі Unity та ін. скриптах
    private int age = 12;

    // Дробове число "float" зі значенням 1.58.
    // "f" - вказівка на тип даних "float"
    // public - дає можливість бачити змінну у редакторі Unity
    // та у екземплярах об'єкту класса Shpargalka (в нашому випадку)
    public float height = 1.58f;

    // Строка тексту(символів) "string" зі значенням 'Алекс'
    // static - дає можливість змінювати значення у всіх екземплярів
    public static string name = "Алекс";

    // Логічний тип даних "bool".
    // Приймає тільки 2 значення = "true" або "false"
    private bool logic = false;

    // Виконується один раз, коли екземпляр об'єкту з'являється
    // на сцені. Ключове слово "void" вказує на те, що ніякі данні
    // не повинні повертатися ключовим словом return
    private void Start()
    // Start - вбудована функція
    {
        // List - список, пустий контейнер, або наповнений певним
        // переліком даних або об'єктів
        List<int> ages = new List<int>(); // Пустий список

        // Умовні оператори

        if (logic) // перевіряє умову
        {
            // Тут буде код, який виконується у випадку, якщо умова
            // повертає логічне "true"
        }
        else if (!logic) // Перевіряє іншу умову
            // Знак "!" перед умовою інвертує її значення
            // Приклад: тут logic змінює значення на "true"
        {
            // Код
        }
        else // Виконується, коли жодна з умов не є дійсною
        {
            // Код
        }

        // Порівняльні оператори

        if (1 < 2) { } // < Меньше ніж
        if (1 > 2) { } // > Більше ніж
        if (1 <= 2) { } // <= Меньше або дорівнює
        if (1 >= 2) { } // >= Більше або дорівнює
        if (1 == 2) { } // == Дорівнює
        if (1 != 2) { } // != Не дорівнює

        // Виконується якщо всі вказані умови вірні
        if (1 == 2 && 2 == 1) { } // && - логічне "та"
        // Виконується якщо хоча б одна умова вірна
        if (1 == 2 || 2 == 1) { } // || - логічне "або"
        
        // Альтернатива операторам if, else if, else
        switch (age) // Перевіряє стан однієї змінної
        {
            case 12: // Порівнює "age" зі значенням "12"
                // Код
                break; // Перериває виконання коду
            case 13:
                // Код
                break;
            default: // Виконується, якщо жодне зі значень не підійшло
                // Код
                break;
        }
    }
    // Виконується кожен кадр, коли екземпляр об'єкту активний
    private void Update()
    // Update - вбудована функція
    {
        
    }

}
